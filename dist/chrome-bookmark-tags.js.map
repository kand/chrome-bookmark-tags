{"version":3,"sources":["chrome-bookmark-tags.js"],"names":[],"mappings":"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","file":"dist/chrome-bookmark-tags.js","sourcesContent":["(function (bookmarks, storage) {\r\n\r\n  // create a searchable data object for searching tags\r\n  var tags;\r\n  var tags_keys;\r\n  var refresh_tags = function () {\r\n    storage.sync.get(null, function (data) {\r\n      // reset tag variables\r\n      tags = {};\r\n      tags_keys = [];\r\n\r\n      // loop through all bookmark ids\r\n      var id;\r\n      for (id in data) {\r\n        var bookmark_tags = data[id];\r\n        var i;\r\n        for (i = 0; i < bookmark_tags.length; i++) {\r\n          var tag = bookmark_tags[i];\r\n          if (tag in tags) {\r\n            // this tag already exists, just add id if unique\r\n            if (!(id in tags[tag])) {\r\n              tags[tag].push(id);\r\n            }\r\n          } else {\r\n            // doesn't exist yet, initialize it\r\n            tags[tag] = [id];\r\n          }\r\n        }\r\n      }\r\n\r\n      // keep a list of all the keys\r\n      tags_keys = Object.keys(tags);\r\n    });\r\n  };\r\n\r\n  // tags stored as {<bookmark_id>: [<tag>,...]}\r\n  var add_tags = function (id, tags) {\r\n    var bookmark_info = {};\r\n    bookmark_info[id] = tags;\r\n    storage.sync.set(bookmark_info);\r\n  };\r\n\r\n  var dfs_tree_writer = function (dom_node, root) {\r\n    var i, child;\r\n    for (i = 0; i < root.children.length; i++) {\r\n      child = root.children[i];\r\n\r\n      // container for this child\r\n      var li_ele = document.createElement('li');\r\n      dom_node.appendChild(li_ele);\r\n\r\n      // add title to li for this item\r\n      var title_ele = document.createElement('span');\r\n      if (child.url) {\r\n        // this is an acutal bookmark, use a link\r\n        var title_a_ele = document.createElement('a');\r\n        title_a_ele.href = child.url;\r\n        title_a_ele.textContent = child.title;\r\n        title_a_ele.target = '_blank';\r\n        title_ele.appendChild(title_a_ele);\r\n      } else {\r\n        // this is a folder, use just the title\r\n        title_ele.textContent = child.title;\r\n      }\r\n      li_ele.appendChild(title_ele);\r\n\r\n      // add input field for bookmarks\r\n      var input_ele = document.createElement('input');\r\n      input_ele.type = 'text';\r\n      storage.sync.get(child.id, (function (entry_id, data) {\r\n        if (data[entry_id]) {\r\n          this.value = data[entry_id].join(',');\r\n        }\r\n      }).bind(input_ele, child.id));\r\n      li_ele.appendChild(input_ele);\r\n\r\n      // add save button for changing tags\r\n      var save_btn = document.createElement('button');\r\n      save_btn.textContent = 'Save';\r\n      save_btn.addEventListener('click', (function (entry_id) {\r\n        if (this.value) {\r\n          // get list of tags as an array\r\n          var tags = this.value\r\n            // ensure multiple spaces in a row become only one space\r\n            .replace(/\\s{2,}/g, ' ')\r\n            // ensure extra spaces around commas are reduced\r\n            .replace(/\\s?,\\s?/g, ',')\r\n            // turn this into an array\r\n            .split(',');\r\n\r\n            // add bookmark tags to storage\r\n            add_tags(entry_id, tags);\r\n        } else {\r\n          // ensure the storage key is removed\r\n          storage.sync.remove(entry_id);\r\n        }\r\n\r\n        // refresh tags\r\n        refresh_tags();\r\n\r\n      }).bind(input_ele, child.id));\r\n      li_ele.appendChild(save_btn);\r\n\r\n      if (!child.url) {\r\n        // this is a folder, continue deeper\r\n        var ul_ele = document.createElement('ul');\r\n        li_ele.appendChild(ul_ele);\r\n\r\n        dfs_tree_writer(ul_ele, child);\r\n      }\r\n    }\r\n  };\r\n\r\n  // set up tag search input and search results\r\n  var search_input = document.getElementById('searchInput');\r\n  var search_results = document.getElementById('searchResults');\r\n  search_input.addEventListener('keyup', function () {\r\n    var query = search_input.value;\r\n\r\n    var matching_ids = [];\r\n    if (query) {\r\n      // loop through tags and add matching ids\r\n      var i;\r\n      for (i = 0; i < tags_keys.length; i++) {\r\n        // does this tag start with the given query?\r\n        var tag = tags_keys[i];\r\n        if (tag.startsWith(query)) {\r\n          // ensure we're only adding unique ids\r\n          var j;\r\n          for (j = 0; j < tags[tag].length; j++) {\r\n            var id = tags[tag][j];\r\n            var id_in_matches = false;\r\n            var k;\r\n            for (k = 0; k < matching_ids.length; k++) {\r\n              if (id === matching_ids[k]) {\r\n                // found a match, we can stop searching\r\n                id_in_matches = true;\r\n                break;\r\n              }\r\n            }\r\n\r\n            if (!id_in_matches) {\r\n              // didn't find the id in the list yet, add it\r\n              matching_ids.push(id);\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    // build search results\r\n    if (matching_ids.length > 0) {\r\n      // have at least one match, clear out and rebuild results\r\n      bookmarks.get(matching_ids, function (matches) {\r\n        var results_ele = document.createElement('ul');\r\n        var i;\r\n        for (i = 0; i < matches.length; i++) {\r\n          var bookmark_ele = document.createElement('li');\r\n          bookmark_ele.innerHTML = matches[i].title\r\n          results_ele.appendChild(bookmark_ele);\r\n        }\r\n        search_results.innerHTML = results_ele.outerHTML;\r\n      });\r\n    } else {\r\n      // no results, let user know\r\n      search_results.innerHTML = 'No search results.';\r\n    }\r\n  });\r\n\r\n  var setup = function () {\r\n    // grab the tree and start writing it out\r\n    bookmarks.getTree(function (tree) {\r\n\r\n      // find container to store list in\r\n      var bookmark_list = document.getElementById('bookmarkList');\r\n\r\n      if (tree.length > 0) {\r\n        // start off the list\r\n        bookmark_list.textContent = '';\r\n        var ul_ele = document.createElement('ul');\r\n\r\n        var i;\r\n        for (i = 0; i < tree.length; i++) {\r\n          dfs_tree_writer(ul_ele, tree[i]);\r\n        }\r\n      } else {\r\n        bookmark_list.textContent = 'No bookmarks found.';\r\n      }\r\n\r\n      bookmark_list.appendChild(ul_ele);\r\n\r\n      refresh_tags();\r\n    });\r\n  };\r\n\r\n  setup();\r\n\r\n})(chrome.bookmarks, chrome.storage);\r\n"]}